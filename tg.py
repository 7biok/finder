import json
import random
import sqlite3
import requests
import telebot
from telebot import types


site = "xyzteam.ru"
bot_token = "1509100537:AAEHIfePXz7jZYje1aZIbBkSiOamtKVKvQU"
videocdn_token = "i3wzGa2Wjeew5mGnZWpYcXatRNskC5v1"
kinopoisk = "kinopoisk.ru/series/"
admin = "1260854913"
url = 'https://videocdn.tv/api/anime-tv-series?api_token='
vk = "https://vk.com/animefiend"
tg = "https://xyzteam.ru"
bot = telebot.TeleBot(bot_token)


@bot.message_handler(commands=['admin'])
def admin(message):
    con = sqlite3.connect("anime.db")
    cur = con.cursor()
    cur.execute(f"select count(*) from Admin where id = {message.chat.id}")
    if cur.fetchone()[0] == 0:
        pass
    else:
        cur.execute("SELECT COUNT(id) from user")
        c = cur.fetchone()[0]
        markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton(text='–î–æ–º–µ–Ω—ã')
        button2 = types.KeyboardButton(text='–°—Ç–æ–ª –∑–∞–∫–∞–∑–æ–≤')
        button3 = types.KeyboardButton(text='–Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ')
        button5_one = types.KeyboardButton(text='—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —á–∞—Ç—ã')
        keyboard_veiw = types.InlineKeyboardMarkup()
        button4 = types.InlineKeyboardButton(text="–ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ –≤ –≤–∫", url=vk)
        button5_two = types.InlineKeyboardButton(text="–ù–∞—à–∞ —Ñ–æ—Ä—É–º", url=tg)
        keyboard_veiw.add(button4, button5_two)
        markup_main.add(button1, button2, button3,button5_one)
        bot.send_message(message.chat.id,
                         'AnimeFinder ‚Ññ 0.0.1',
                         reply_markup=markup_main)
        bot.send_message(message.chat.id,
                         '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ animefinder',
                         reply_markup=keyboard_veiw)
        bot.send_message(message.chat.id,f"*–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å*\n –ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Å—Ç–∏–∫–∞\n –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:{c}", parse_mode="Markdown")

@bot.message_handler(commands=['start'])
def start_message(message):
    con = sqlite3.connect("anime.db")
    cur = con.cursor()
    cur.execute(f"select count(*) from user where id = {message.chat.id}")
    if cur.fetchone()[0] == 0:
        id_new = "–ù–µ—Ç—É"
        cur.execute("INSERT INTO user(id,nick,id_new) VALUES(?,?,?)",(message.chat.id,message.chat.username,id_new))
        con.commit()
        markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton(text='üë∫–ù–∞–π—Ç–∏ –∞–Ω–∏–º–µüë∫')
        button2 = types.KeyboardButton(text='ü•µ–ü–æ–ø—É–ª—è—Ä–Ω–æü•µ')
        button3 = types.KeyboardButton(text='üëæ–†–∞–Ω–¥–æ–º–Ω–æ–µ –∞–Ω–∏–º–µüëæ')
        keyboard_veiw = types.InlineKeyboardMarkup()
        button4 = types.InlineKeyboardButton(text="–ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ –≤ –≤–∫", url=vk)
        button5 = types.InlineKeyboardButton(text="–ù–∞—à–∞ —Ñ–æ—Ä—É–º", url=tg)
        keyboard_veiw.add(button4,button5)
        markup_main.add(button1, button2, button3)
        bot.send_message(message.chat.id,
                         'AnimeFinder ‚Ññ 0.0.1',
                         reply_markup=markup_main)
        bot.send_message(message.chat.id,
                         '–ü—Ä–∏–≤–µ—Ç, —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ /start\n–∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∞–Ω–∏–º–µ –Ω–∞ —Å–≤–æ–π –≤–∫—É—Åü•≥üëª',
                         reply_markup=keyboard_veiw)
    else:
        markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton(text='üë∫–ù–∞–π—Ç–∏ –∞–Ω–∏–º–µüë∫')
        button2 = types.KeyboardButton(text='ü•µ–ü–æ–ø—É–ª—è—Ä–Ω–æü•µ')
        button3 = types.KeyboardButton(text='üëæ–†–∞–Ω–¥–æ–º–Ω–æ–µ –∞–Ω–∏–º–µüëæ')
        keyboard_veiw = types.InlineKeyboardMarkup()
        button4 = types.InlineKeyboardButton(text="–ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ –≤ –≤–∫", url=vk)
        button5 = types.InlineKeyboardButton(text="–ù–∞—à–∞ —Ñ–æ—Ä—É–º", url=tg)
        keyboard_veiw.add(button4, button5)
        markup_main.add(button1, button2, button3)
        bot.send_message(message.chat.id,
                         'AnimeFinder ‚Ññ 0.0.1',
                         reply_markup=markup_main)
        bot.send_message(message.chat.id,
                         '–ü—Ä–∏–≤–µ—Ç, —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ /start\n–∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∞–Ω–∏–º–µ –Ω–∞ —Å–≤–æ–π –≤–∫—É—Åü•≥üëª',
                         reply_markup=keyboard_veiw)



@bot.message_handler(content_types="text")
def get_text_message(message):
    if message.text == "üë∫–ù–∞–π—Ç–∏ –∞–Ω–∏–º–µüë∫":
        markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton(text='–ù–∞–∑–∞–¥')
        markup_main.add(button1)
        hideBoard = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id,"*–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–Ω–∏–º–µ*",reply_markup=hideBoard,parse_mode="Markdown")
        bot.send_message(message.chat.id," _–í–≤–æ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ_:\n –ü—Ä–∞–≤–∏–ª—å–Ω–æ:*–¢–æ–∫–∏–π—Å–∫–∏–π –ì—É–ª—å*\n –ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ:*–¢–∞–∫—Å–∏—Å—Ç–∫–∞ –≥—É–ª—å–Ω—É–ª*",reply_markup=markup_main,parse_mode="Markdown")
        bot.register_next_step_handler(message, get_anime)
    if message.text == "ü•µ–ü–æ–ø—É–ª—è—Ä–Ω–æü•µ":
        url_quest = url + videocdn_token
        params = {'ordering': "end_date created","limit":4,"translation":2}
        r = requests.get(url_quest, params=params)
        json_true = json.loads(r.text)
        print(json_true)
        if json_true["result"] == True:
            if json_true["data"]:
                for l in json_true["data"]:
                    if l["kinopoisk_id"] == None:
                        kinop = "–ù–µ—Ç—É"
                    else:
                        kinop = kinopoisk + str(l["kinopoisk_id"])
                    title = l["ru_title"] + "(" + l["en_title"] + ")"
                    creat = l["created"]
                    realese = l["updated"]
                    type = l["content_type"]
                    for s in l["translations"]:
                        quility = s["max_quality"]
                        tit = s["title"]
                        div = f"""
                                            *üìñ–ù–∞–∑–≤–∞–Ω–∏–µ:*{title}\n
                    *üì∞–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∏–Ω–æ–ø–æ–∏—Å–∫:*[–ü–µ—Ä–µ–π—Ç–∏]({kinop})\n
                    *üì•–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:*{creat}\n
                    *üì§–î–∞—Ç–∞ –ü–æ—è–≤–ª–µ–Ω–∏—è –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö:*{realese}\n
                    *üìé–¢–∏–ø:*{type}\n
                    *üõë–û–∑–≤—É—á–∫–∞:*{tit}\n
                    *üíª–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ:*{quility}\n

                                            """
                        keyboard_veiw = types.InlineKeyboardMarkup()
                        urls = s["iframe_src"].split("/")
                        href = "https://bot.xyzteam.ru/films/" + urls[5]
                        print(href)
                        url_button = types.InlineKeyboardButton(text="–°–º–æ—Ç—Ä–µ—Ç—å", url=href)
                        keyboard_veiw.add(url_button)
                        bot.send_message(message.chat.id, div, parse_mode="Markdown", reply_markup=keyboard_veiw)
            elif not json_true["data"]:
                bot.send_message(message.chat.id, "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–Ω–æ")
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")
    if message.text == "üëæ–†–∞–Ω–¥–æ–º–Ω–æ–µ –∞–Ω–∏–º–µüëæ":
        url_quest = url + videocdn_token
        params = {"id": random.randrange(1, 100)}
        r = requests.get(url_quest, params=params)
        json_true = json.loads(r.text)
        print(json_true)
        if json_true["result"] == True:
            if json_true["data"]:
                for l in json_true["data"]:
                    if l["kinopoisk_id"] == None:
                        kinop = "–ù–µ—Ç—É"
                    else:
                        kinop = kinopoisk + str(l["kinopoisk_id"])
                    title = l["ru_title"] + "(" + l["en_title"] + ")"
                    creat = l["created"]
                    realese = l["updated"]
                    type = l["content_type"]
                    for s in l["translations"]:
                        quility = s["max_quality"]
                        tit = s["title"]
                        div = f"""
                                            *üìñ–ù–∞–∑–≤–∞–Ω–∏–µ:*{title}\n
                    *üì∞–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∏–Ω–æ–ø–æ–∏—Å–∫:*[–ü–µ—Ä–µ–π—Ç–∏]({kinop})\n
                    *üì•–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:*{creat}\n
                    *üì§–î–∞—Ç–∞ –ü–æ—è–≤–ª–µ–Ω–∏—è –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö:*{realese}\n
                    *üìé–¢–∏–ø:*{type}\n
                    *üõë–û–∑–≤—É—á–∫–∞:*{tit}\n
                    *üíª–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ:*{quility}\n

                                            """ +"\n _–õ—é–±–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –∫–æ—Ç–æ—Ä–∞—è –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è,–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –æ–∑–≤—É—á–∫–∞—Ö!_"
                        keyboard_veiw = types.InlineKeyboardMarkup()
                        urls = s["iframe_src"].split("/")
                        href = "https://bot.xyzteam.ru/films/" + urls[5]
                        print(href)
                        url_button = types.InlineKeyboardButton(text="–°–º–æ—Ç—Ä–µ—Ç—å", url=href)
                        keyboard_veiw.add(url_button)
                        bot.send_message(message.chat.id, div, parse_mode="Markdown", reply_markup=keyboard_veiw)
            elif not json_true["data"]:
                bot.send_message(message.chat.id, "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–Ω–æ")
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")
    if message.text == "–î–æ–º–µ–Ω—ã":
        con = sqlite3.connect("anime.db")
        cur = con.cursor()
        cur.execute(f"select count(*) from Admin where id = {message.chat.id}")
        if cur.fetchone()[0] == 0:
            pass
        else:
            result_one = "http://xyzteam.ru"
            result_two = "http://xyzteam.online"
            r1 = requests.get(result_one)
            r2 = requests.get(result_two)
            if r1.status_code == 200:
                result_one = "xyzteam.ru‚úÖ"
            else:
                result_one = "xyzteam.ru‚Äº"
            if r2.status_code == 200:
                result_two = "xyzteam.online‚úÖ"
            else:
                result_two = "xyzteam.online‚Äº"
            print()
            keyboard_veiw = types.InlineKeyboardMarkup()
            ru = types.InlineKeyboardButton(text=result_one, url="http://xyzteam.ru")
            online = types.InlineKeyboardButton(text=result_two, url="http://xyzteam.online")
            keyboard_veiw.add(ru,online)
            bot.send_message(message.chat.id,"–ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ –ø–æ –≤–∞—à–µ–º –¥–æ–º–µ–Ω–∞–º",reply_markup=keyboard_veiw)
    if message.text == "–°—Ç–æ–ª –∑–∞–∫–∞–∑–æ–≤":
        con = sqlite3.connect("anime.db")
        cur = con.cursor()
        cur.execute(f"select count(*) from Admin where id = {message.chat.id}")
        if cur.fetchone()[0] == 0:
            pass
        else:
            pass
    if message.text == "—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —á–∞—Ç—ã":
        con = sqlite3.connect("anime.db")
        cur = con.cursor()
        cur.execute(f"select count(*) from Admin where id = {message.chat.id}")
        if cur.fetchone()[0] == 0:
            pass
        else:
            pass
    if message.text == "–Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ":
        con = sqlite3.connect("anime.db")
        cur = con.cursor()
        cur.execute(f"select count(*) from Admin where id = {message.chat.id}")
        if cur.fetchone()[0] == 0:
            pass
        else:
            markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button1 = types.KeyboardButton(text='–ù–∞–∑–∞–¥')
            markup_main.add(button1)
            bot.send_message(message.chat.id,"–ù–∞–ø–∏—à–∏—Ç–µ id —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ:",reply_markup=markup_main)
            bot.register_next_step_handler(message,message_send)

def message_send(message):
    global chat_id_send
    chat_id_send = message.text
    hideBoard = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –¥–ª—è –Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", reply_markup=hideBoard)
    bot.register_next_step_handler(message,message_role)

def message_role(message):
    print(chat_id_send)
    mess = message.text
    bot.send_message(chat_id_send,mess)
    bot.send_message(message.chat.id,"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ")
    con = sqlite3.connect("anime.db")
    cur = con.cursor()
    cur.execute(f"select count(*) from Admin where id = {message.chat.id}")
    if cur.fetchone()[0] == 0:
        pass
    else:
        cur.execute("SELECT COUNT(id) from user")
        c = cur.fetchone()[0]
        markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton(text='–î–æ–º–µ–Ω—ã')
        button2 = types.KeyboardButton(text='–°—Ç–æ–ª –∑–∞–∫–∞–∑–æ–≤')
        button3 = types.KeyboardButton(text='–Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ')
        button5_one = types.KeyboardButton(text='—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —á–∞—Ç—ã')
        keyboard_veiw = types.InlineKeyboardMarkup()
        button4 = types.InlineKeyboardButton(text="–ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ –≤ –≤–∫", url=vk)
        button5_two = types.InlineKeyboardButton(text="–ù–∞—à–∞ —Ñ–æ—Ä—É–º", url=tg)
        keyboard_veiw.add(button4, button5_two)
        markup_main.add(button1, button2, button3, button5_one)
        bot.send_message(message.chat.id,
                         'AnimeFinder ‚Ññ 0.0.1',
                         reply_markup=markup_main)
        bot.send_message(message.chat.id,
                         '–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ animefinder',
                         reply_markup=keyboard_veiw)
        bot.send_message(message.chat.id, f"*–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å*\n –ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Å—Ç–∏–∫–∞\n –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:{c}",
                         parse_mode="Markdown")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.data == "return":
        pass



@bot.message_handler(content_types="text")
def get_anime(message):
    if message.text != "–ù–∞–∑–∞–¥":
        url_quest = url + videocdn_token
        mes = message.text
        print(mes)
        params = {'query': mes}
        r = requests.get(url_quest, params=params)
        json_true = json.loads(r.text)
        print(json_true)
        if json_true["result"] == True:
                if json_true["data"]:
                    for l in json_true["data"]:
                        if l["kinopoisk_id"] == None:
                            kinop = "–ù–µ—Ç—É"
                        else:
                            kinop = kinopoisk + str(l["kinopoisk_id"])
                        title = l["ru_title"] + "(" + l["en_title"] + ")"
                        creat = l["created"]
                        realese = l["updated"]
                        type = l["content_type"]
                        for s in l["translations"]:
                                quility = s["max_quality"]
                                tit = s["title"]
                                div = f"""
                                *üìñ–ù–∞–∑–≤–∞–Ω–∏–µ:*{title}\n
        *üì∞–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∏–Ω–æ–ø–æ–∏—Å–∫:*[–ü–µ—Ä–µ–π—Ç–∏]({kinop})\n
        *üì•–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:*{creat}\n
        *üì§–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞:*{realese}\n
        *üìé–¢–∏–ø:*{type}\n
        *üõë–û–∑–≤—É—á–∫–∞:*{tit}\n
        *üíª–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ:*{quility}\n
                                
                                """ +"\n _–õ—é–±–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –∫–æ—Ç–æ—Ä–∞—è –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è —Å –∞–Ω–∏–º–µ,–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –æ–∑–≤—É—á–∫–∞—Ö!_"
                                keyboard_veiw = types.InlineKeyboardMarkup()
                                urls = s["iframe_src"].split("/")
                                href = "https://bot.xyzteam.ru/films/" + urls[5]
                                print(s["iframe_src"])
                                url_button = types.InlineKeyboardButton(text="–°–º–æ—Ç—Ä–µ—Ç—å", url=href)
                                keyboard_veiw.add(url_button)
                                bot.send_message(message.chat.id,div,parse_mode="Markdown",reply_markup=keyboard_veiw)
                elif not json_true["data"]:
                    bot.send_message(message.chat.id,"–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–Ω–æ")
                    markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    button1 = types.KeyboardButton(text='üë∫–ù–∞–π—Ç–∏ –∞–Ω–∏–º–µüë∫')
                    button2 = types.KeyboardButton(text='ü•µ–ü–æ–ø—É–ª—è—Ä–Ω–æü•µ')
                    button3 = types.KeyboardButton(text='üëæ–†–∞–Ω–¥–æ–º–Ω–æ–µ –∞–Ω–∏–º–µüëæ')
                    keyboard_veiw = types.InlineKeyboardMarkup()
                    button4 = types.InlineKeyboardButton(text="–ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ –≤ –≤–∫", url=vk)
                    button5 = types.InlineKeyboardButton(text="–ù–∞—à–∞ —Ñ–æ—Ä—É–º", url=tg)
                    keyboard_veiw.add(button4, button5)
                    markup_main.add(button1, button2, button3)
                    bot.send_message(message.chat.id,
                                     '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–∏–∞–ª–∞',reply_markup=markup_main)
                    bot.send_message(message.chat.id,
                                     '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é \n —É –Ω–∞—Å –µ—Å—Ç—å —Ç–∞–∫ –∂–µ *–°—Ç–æ–ª –∑–∞–∫–∞–∑–æ–≤*',
                                     reply_markup=keyboard_veiw,parse_mode="Markdown")

        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")
    else:
        markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton(text='üë∫–ù–∞–π—Ç–∏ –∞–Ω–∏–º–µüë∫')
        button2 = types.KeyboardButton(text='ü•µ–ü–æ–ø—É–ª—è—Ä–Ω–æü•µ')
        button3 = types.KeyboardButton(text='üëæ–†–∞–Ω–¥–æ–º–Ω–æ–µ –∞–Ω–∏–º–µüëæ')
        keyboard_veiw = types.InlineKeyboardMarkup()
        button4 = types.InlineKeyboardButton(text="–ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ –≤ –≤–∫", url=vk)
        button5 = types.InlineKeyboardButton(text="–ù–∞—à–∞ —Ñ–æ—Ä—É–º", url=tg)
        keyboard_veiw.add(button4, button5)
        markup_main.add(button1, button2, button3)
        bot.send_message(message.chat.id,
                         'AnimeFinder ‚Ññ 0.0.1',
                         reply_markup=markup_main)
        bot.send_message(message.chat.id,
                         '–ü—Ä–∏–≤–µ—Ç, —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ /start\n–∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∞–Ω–∏–º–µ –Ω–∞ —Å–≤–æ–π –≤–∫—É—Åü•≥üëª',
                         reply_markup=keyboard_veiw)


bot.polling()
