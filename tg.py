import json
import random
import sqlite3
import requests
import telebot
from telebot import types


site = "xyzteam.ru"
bot_token = "1509100537:AAEHIfePXz7jZYje1aZIbBkSiOamtKVKvQU"
videocdn_token = "i3wzGa2Wjeew5mGnZWpYcXatRNskC5v1"
kinopoisk = "kinopoisk.ru/series/"
admin = "1260854913"
url = 'https://videocdn.tv/api/anime-tv-series?api_token='


bot = telebot.TeleBot(bot_token)


@bot.message_handler(commands=['admin'])
def admin(message):
    con = sqlite3.connect("anime.db")
    cur = con.cursor()
    cur.execute(f"select count(*) from Admin where id = {message.chat.id}")
    c = cur.execute("SELECT COUNT(*) FROM user")
    if cur.fetchone()[0] == 0:
        pass
    else:
        bot.send_message(message.chat.id,f"*–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å*\n –ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Å—Ç–∏–∫–∞:\n –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:{c}", parse_mode="Markdown")

@bot.message_handler(commands=['start'])
def start_message(message):
    con = sqlite3.connect("anime.db")
    cur = con.cursor()
    cur.execute(f"select count(*) from user where id = {message.chat.id}")
    if cur.fetchone()[0] == 0:
        id_new = "–ù–µ—Ç—É"
        cur.execute("INSERT INTO user(id,nick,id_new) VALUES(?,?,?)",(message.chat.id,message.chat.username,id_new))
        con.commit()
        markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton(text='üë∫–ù–∞–π—Ç–∏ –∞–Ω–∏–º–µüë∫')
        button2 = types.KeyboardButton(text='ü•µ–ü–æ–ø—É–ª—è—Ä–Ω–æü•µ')
        button3 = types.KeyboardButton(text='üëæ–†–∞–Ω–¥–æ–º–Ω–æ–µ –∞–Ω–∏–º–µüëæ')
        keyboard_veiw = types.InlineKeyboardMarkup()
        button4 = types.InlineKeyboardButton(text="–ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ –≤ –≤–∫", url="https://vk.com/animefiend")
        button5 = types.InlineKeyboardButton(text="–ù–∞—à–∞ —Ñ–æ—Ä—É–º", url="https://xyzteam.ru")
        keyboard_veiw.add(button4,button5)
        markup_main.add(button1, button2, button3)
        bot.send_message(message.chat.id,
                         'AnimeFinder ‚Ññ 0.0.1',
                         reply_markup=markup_main)
        bot.send_message(message.chat.id,
                         '–ü—Ä–∏–≤–µ—Ç, —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ /start\n–∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∞–Ω–∏–º–µ –Ω–∞ —Å–≤–æ–π –≤–∫—É—Åü•≥üëª',
                         reply_markup=keyboard_veiw)
    else:
        markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton(text='üë∫–ù–∞–π—Ç–∏ –∞–Ω–∏–º–µüë∫')
        button2 = types.KeyboardButton(text='ü•µ–ü–æ–ø—É–ª—è—Ä–Ω–æü•µ')
        button3 = types.KeyboardButton(text='üëæ–†–∞–Ω–¥–æ–º–Ω–æ–µ –∞–Ω–∏–º–µüëæ')
        keyboard_veiw = types.InlineKeyboardMarkup()
        button4 = types.InlineKeyboardButton(text="–ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ –≤ –≤–∫", url="https://vk.com/animefiend")
        button5 = types.InlineKeyboardButton(text="–ù–∞—à–∞ —Ñ–æ—Ä—É–º", url="https://xyzteam.ru")
        keyboard_veiw.add(button4, button5)
        markup_main.add(button1, button2, button3)
        bot.send_message(message.chat.id,
                         'AnimeFinder ‚Ññ 0.0.1',
                         reply_markup=markup_main)
        bot.send_message(message.chat.id,
                         '–ü—Ä–∏–≤–µ—Ç, —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ /start\n–∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∞–Ω–∏–º–µ –Ω–∞ —Å–≤–æ–π –≤–∫—É—Åü•≥üëª',
                         reply_markup=keyboard_veiw)



@bot.message_handler(content_types="text")
def get_text_message(message):
    if message.text == "üë∫–ù–∞–π—Ç–∏ –∞–Ω–∏–º–µüë∫":
        markup_main = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥',callback_data="return")
        markup_main.add(button1)
        hideBoard = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id,"*–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–Ω–∏–º–µ*",reply_markup=hideBoard,parse_mode="Markdown")
        bot.send_message(message.chat.id," _–í–≤–æ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ_:\n –ü—Ä–∞–≤–∏–ª—å–Ω–æ:*–¢–æ–∫–∏–π—Å–∫–∏–π –ì—É–ª—å*\n –ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ:*–¢–∞–∫—Å–∏—Å—Ç–∫–∞ –≥—É–ª—å–Ω—É–ª*",reply_markup=markup_main,parse_mode="Markdown")
        bot.register_next_step_handler(message, get_anime)
    if message.text == "ü•µ–ü–æ–ø—É–ª—è—Ä–Ω–æü•µ":
        url_quest = url + videocdn_token
        params = {'ordering': "end_date created","limit":4,"translation":2}
        r = requests.get(url_quest, params=params)
        json_true = json.loads(r.text)
        print(json_true)
        if json_true["result"] == True:
            if json_true["data"]:
                for l in json_true["data"]:
                    if l["kinopoisk_id"] == None:
                        kinop = "–ù–µ—Ç—É"
                    else:
                        kinop = kinopoisk + str(l["kinopoisk_id"])
                    title = l["ru_title"] + "(" + l["en_title"] + ")"
                    creat = l["created"]
                    realese = l["updated"]
                    type = l["content_type"]
                    for s in l["translations"]:
                        quility = s["max_quality"]
                        tit = s["title"]
                        div = f"""
                                            *üìñ–ù–∞–∑–≤–∞–Ω–∏–µ:*{title}\n
                    *üì∞–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∏–Ω–æ–ø–æ–∏—Å–∫:*[–ü–µ—Ä–µ–π—Ç–∏]({kinop})\n
                    *üì•–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:*{creat}\n
                    *üì§–î–∞—Ç–∞ –ü–æ—è–≤–ª–µ–Ω–∏—è –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö:*{realese}\n
                    *üìé–¢–∏–ø:*{type}\n
                    *üõë–û–∑–≤—É—á–∫–∞:*{tit}\n
                    *üíª–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ:*{quility}\n

                                            """
                        keyboard_veiw = types.InlineKeyboardMarkup()
                        url_button = types.InlineKeyboardButton(text="–°–º–æ—Ç—Ä–µ—Ç—å", url=l["preview_iframe_src"])
                        keyboard_veiw.add(url_button)
                        bot.send_message(message.chat.id, div, parse_mode="Markdown", reply_markup=keyboard_veiw)
            elif not json_true["data"]:
                bot.send_message(message.chat.id, "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–Ω–æ")
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")
    if message.text == "üëæ–†–∞–Ω–¥–æ–º–Ω–æ–µ –∞–Ω–∏–º–µüëæ":
        url_quest = url + videocdn_token
        params = {"id": random.randrange(1, 100)}
        r = requests.get(url_quest, params=params)
        json_true = json.loads(r.text)
        print(json_true)
        if json_true["result"] == True:
            if json_true["data"]:
                for l in json_true["data"]:
                    if l["kinopoisk_id"] == None:
                        kinop = "–ù–µ—Ç—É"
                    else:
                        kinop = kinopoisk + str(l["kinopoisk_id"])
                    title = l["ru_title"] + "(" + l["en_title"] + ")"
                    creat = l["created"]
                    realese = l["updated"]
                    type = l["content_type"]
                    for s in l["translations"]:
                        quility = s["max_quality"]
                        tit = s["title"]
                        div = f"""
                                            *üìñ–ù–∞–∑–≤–∞–Ω–∏–µ:*{title}\n
                    *üì∞–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∏–Ω–æ–ø–æ–∏—Å–∫:*[–ü–µ—Ä–µ–π—Ç–∏]({kinop})\n
                    *üì•–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:*{creat}\n
                    *üì§–î–∞—Ç–∞ –ü–æ—è–≤–ª–µ–Ω–∏—è –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö:*{realese}\n
                    *üìé–¢–∏–ø:*{type}\n
                    *üõë–û–∑–≤—É—á–∫–∞:*{tit}\n
                    *üíª–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ:*{quility}\n

                                            """ +"\n _–õ—é–±–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –∫–æ—Ç–æ—Ä–∞—è –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è,–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –æ–∑–≤—É—á–∫–∞—Ö!_"
                        keyboard_veiw = types.InlineKeyboardMarkup()
                        url_button = types.InlineKeyboardButton(text="–°–º–æ—Ç—Ä–µ—Ç—å", url=l["preview_iframe_src"])
                        keyboard_veiw.add(url_button)
                        bot.send_message(message.chat.id, div, parse_mode="Markdown", reply_markup=keyboard_veiw)
            elif not json_true["data"]:
                bot.send_message(message.chat.id, "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–Ω–æ")
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.data == "return":
        markup_main = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton(text='üë∫–ù–∞–π—Ç–∏ –∞–Ω–∏–º–µüë∫')
        button2 = types.KeyboardButton(text='ü•µ–ü–æ–ø—É–ª—è—Ä–Ω–æü•µ')
        button3 = types.KeyboardButton(text='üëæ–†–∞–Ω–¥–æ–º–Ω–æ–µ –∞–Ω–∏–º–µüëæ')
        keyboard_veiw = types.InlineKeyboardMarkup()
        button4 = types.InlineKeyboardButton(text="–ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ –≤ –≤–∫", url="https://vk.com/animefiend")
        button5 = types.InlineKeyboardButton(text="–ù–∞—à–∞ —Ñ–æ—Ä—É–º", url="https://xyzteam.ru")
        keyboard_veiw.add(button4, button5)
        markup_main.add(button1, button2, button3)
        bot.send_message(call.message.chat.id,
                         'AnimeFinder ‚Ññ 0.0.1',
                         reply_markup=markup_main)
        bot.send_message(call.message.chat.id,
                         '–ü—Ä–∏–≤–µ—Ç, —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ /start\n–∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∞–Ω–∏–º–µ –Ω–∞ —Å–≤–æ–π –≤–∫—É—Åü•≥üëª',
                         reply_markup=keyboard_veiw)




def get_anime(message):
    url_quest = url + videocdn_token
    mes = message.text
    print(mes)
    params = {'query': mes}
    r = requests.get(url_quest, params=params)
    json_true = json.loads(r.text)
    print(json_true)
    if json_true["result"] == True:
            if json_true["data"]:
                for l in json_true["data"]:
                    if l["kinopoisk_id"] == None:
                        kinop = "–ù–µ—Ç—É"
                    else:
                        kinop = kinopoisk + str(l["kinopoisk_id"])
                    title = l["ru_title"] + "(" + l["en_title"] + ")"
                    creat = l["created"]
                    realese = l["updated"]
                    type = l["content_type"]
                    for s in l["translations"]:
                            quility = s["max_quality"]
                            tit = s["title"]
                            div = f"""
                            *üìñ–ù–∞–∑–≤–∞–Ω–∏–µ:*{title}\n
    *üì∞–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∏–Ω–æ–ø–æ–∏—Å–∫:*[–ü–µ—Ä–µ–π—Ç–∏]({kinop})\n
    *üì•–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:*{creat}\n
    *üì§–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞:*{realese}\n
    *üìé–¢–∏–ø:*{type}\n
    *üõë–û–∑–≤—É—á–∫–∞:*{tit}\n
    *üíª–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ:*{quility}\n
                            
                            """ +"\n _–õ—é–±–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –∫–æ—Ç–æ—Ä–∞—è –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è —Å –∞–Ω–∏–º–µ,–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –æ–∑–≤—É—á–∫–∞—Ö!_"
                            keyboard_veiw = types.InlineKeyboardMarkup()
                            url_button = types.InlineKeyboardButton(text="–°–º–æ—Ç—Ä–µ—Ç—å", url=l["preview_iframe_src"])
                            keyboard_veiw.add(url_button)
                            bot.send_message(message.chat.id,div,parse_mode="Markdown",reply_markup=keyboard_veiw)
            elif not json_true["data"]:
                bot.send_message(message.chat.id,"–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–Ω–æ")
    else:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")

bot.polling()
